Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 26 2018, 23:26:24) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "copyright", "credits" or "license()" for more information.
>>> def qs(l):
	if len(l)<=1:
		return l
	return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])

>>> qs([4,3,1,24])
[1, 3, 4, 24]
>>> 
>>> qs([4,3,1,24,12,123,41,1])
[1, 1, 3, 4, 12, 24, 41, 123]
>>> def qs(l):
	return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+l

>>> qs([4,3,1,24])
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    qs([4,3,1,24])
  File "<pyshell#9>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+l
  File "<pyshell#9>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+l
  File "<pyshell#9>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+l
  [Previous line repeated 990 more times]
RecursionError: maximum recursion depth exceeded
>>> def qs(l):
	return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+[x for x in l if len(l)==1]

>>> 
>>> def qs(l):
	return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+[x for x in l if len(l)<=1]

>>> qs([4,3,1,24,12,123,41,1])
Traceback (most recent call last):
  File "<pyshell#16>", line 1, in <module>
    qs([4,3,1,24,12,123,41,1])
  File "<pyshell#15>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+[x for x in l if len(l)<=1]
  File "<pyshell#15>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+[x for x in l if len(l)<=1]
  File "<pyshell#15>", line 2, in qs
    return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])+[x for x in l if len(l)<=1]
  [Previous line repeated 990 more times]
RecursionError: maximum recursion depth exceeded
>>> def qs(l):
	if len(l)<=1:
		return l
	return qs([x for x in l if x<l[len(l)-1]])+[x for x in l if x==l[len(l)-1]]+qs([x for x in l if x>l[len(l)-1]])

>>> 
